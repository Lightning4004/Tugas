    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prokel;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Iis Sukmawati
 */
public class UpdateDataStok extends javax.swing.JFrame {

    private List<Minimarket> dataStokMinimarket = new ArrayList();
    private String username;
    private String password;

    /**
     * Creates new form UpdateDataStok
     */
    public UpdateDataStok() {
        initComponents();
    }
    
    public UpdateDataStok(String username, String password) {
        this.username = username;
        this.password = password;
        initComponents();
    }

    public void clearField() {
        isiNamaBarang.setText("");
        pilihanKategori.setSelectedIndex(0);
        isiJumlahStok.setText("");
        isiHargaSatuan.setText("");
    }
    
    public Connection getConnection() {
        String host = "localhost";  
        String port = "1521";
        String db = "xe";
        Connection conn = null;
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"Driver tidak ditemukan");
            JOptionPane.showMessageDialog(this,"message:" + ex.getMessage());
        }

        try {
            conn = DriverManager.getConnection("jdbc:oracle:thin:@" + host
                    + ":" + port + ":" + db, username, password);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Koneksi gagal");
            JOptionPane.showMessageDialog(this,"message: " + ex.getMessage());
        }

        return conn;
    }

    private boolean isValidJumStok(String jumlahStok) {
        String pattern = "[0-9]{1,5}"; // Menerima angka 1 hingga 5 digit
        if (jumlahStok.matches(pattern)) {
            int stok = Integer.parseInt(jumlahStok);
            return stok > 0; // Memastikan stok lebih dari 0
        }
        return false; // Jika tidak sesuai pola, kembalikan false
    }

    private boolean isValidHarga(String harga) {
        String pattern = "^Rp[0-9]{1,3}(?:\\.[0-9]{1}[0]{2})*$";
        return harga.matches(pattern);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        kodeBarang = new javax.swing.JLabel();
        namaBarang = new javax.swing.JLabel();
        kategori = new javax.swing.JLabel();
        jumlahStok = new javax.swing.JLabel();
        hargaSatuan = new javax.swing.JLabel();
        isiKodeBarang = new javax.swing.JTextField();
        isiNamaBarang = new javax.swing.JTextField();
        isiJumlahStok = new javax.swing.JTextField();
        isiHargaSatuan = new javax.swing.JTextField();
        pilihanKategori = new javax.swing.JComboBox<>();
        tombolSave = new javax.swing.JButton();
        tombolCancel = new javax.swing.JButton();
        Rp = new javax.swing.JLabel();
        tigaDigitAngka = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Update Data Stok"));

        kodeBarang.setText("Kode Barang");

        namaBarang.setText("Nama Barang");

        kategori.setText("Kategori");

        jumlahStok.setText("Jumlah Stok");

        hargaSatuan.setText("Harga Satuan");

        pilihanKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Pilih --", "Makanan", "Minuman" }));

        tombolSave.setText("SAVE ");
        tombolSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSaveActionPerformed(evt);
            }
        });

        tombolCancel.setText("CANCEL");
        tombolCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCancelActionPerformed(evt);
            }
        });

        Rp.setText("RpX.X00");

        tigaDigitAngka.setText("3 digit angka");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hargaSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jumlahStok, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tombolSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tombolCancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(isiKodeBarang)
                            .addComponent(isiNamaBarang)
                            .addComponent(isiJumlahStok)
                            .addComponent(isiHargaSatuan)
                            .addComponent(pilihanKategori, 0, 206, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Rp)
                            .addComponent(tigaDigitAngka))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kodeBarang)
                            .addComponent(isiKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tigaDigitAngka))
                        .addGap(18, 18, 18)
                        .addComponent(namaBarang))
                    .addComponent(isiNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kategori)
                    .addComponent(pilihanKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jumlahStok)
                    .addComponent(isiJumlahStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hargaSatuan)
                    .addComponent(isiHargaSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rp))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolSave)
                    .addComponent(tombolCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCancelActionPerformed
        // Menampilkan JOptionPane untuk konfirmasi keluar
        int cancel = javax.swing.JOptionPane.showConfirmDialog(this,
                "Apakah anda ingin keluar sekarang?",
                "Konfirmasi Keluar",
                javax.swing.JOptionPane.YES_NO_OPTION);

        // Jika pengguna memilih "Yes", maka frame ditutup
        if (cancel == javax.swing.JOptionPane.YES_OPTION) {
            this.dispose(); // Menutup jendela frame saat ini
        }
        // Jika memilih "No", maka tidak ada yang dilakukan, frame tetap terbuka
    }//GEN-LAST:event_tombolCancelActionPerformed

    private void tombolSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSaveActionPerformed

        Connection conn = null;
        PreparedStatement ps = null;

        // Ambil koneksi ke database
        conn = this.getConnection();
        
        boolean isValid = true;
        
        String kodBar, namBar;
        String pilKate = null;
        String jumStok = null;
        String harSatu = null;
        

        // Ambil nilai input dari form
        kodBar = isiKodeBarang.getText();
        namBar = isiNamaBarang.getText();
        if (pilihanKategori.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Tolong pilih kategori",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            isValid = false;
        } else {
            pilKate = pilihanKategori.getSelectedItem().toString();
        }
                if (this.isValidJumStok(isiJumlahStok.getText())) {
            jumStok = isiJumlahStok.getText();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Jumlah stok tidak valid! Pastikan jumlah stok terdiri dari angka antara 1 hingga 100 digit.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            isValid = false;
        }

        if (this.isValidHarga(isiHargaSatuan.getText())) {
            harSatu = isiHargaSatuan.getText();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Harga tidak valid! Pastikan harga dimulai dengan 'Rp' dan diikuti dengan angka 1.000!",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            isValid = false;
        }

        try {
            // Nonaktifkan auto-commit
            conn.setAutoCommit(false);

            // Query SQL untuk update data
            String sql = "UPDATE MINIMARKET SET NAMABARANG = ?, KATEGORI = ?, STOKTERSEDIA = ?, HARGA = ? WHERE KODEBARANG = ?";
            ps = conn.prepareStatement(sql);

            // Set parameter query
            ps.setString(1, namBar);
            ps.setString(2, pilKate);
            ps.setString(3, jumStok);
            ps.setString(4, harSatu);
            ps.setString(5, kodBar);

            // Eksekusi update
            int rowsAffected = ps.executeUpdate();

            // Commit perubahan ke database
            conn.commit();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diubah!");

                // Perbarui daftar lokal dengan data baru
                for (Minimarket item : dataStokMinimarket) {
                    if (item.getKodeBarang().equals(kodBar)) {
                        item.setNamaBarang(namBar);
                        item.setKategori(pilKate);
                        item.setJumlahStok(jumStok);
                        item.setHargaSatuan(harSatu);
                        break;
                    }
                }
                clearField();
            } else {
                JOptionPane.showMessageDialog(this, "Data gagal diubah");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Message: " + ex.getMessage());
            try {
                // Rollback jika ada error koneksi
                // Fungsi Rollback adalah membatalkan penyimpanan data saat koneksi gagal
                if (conn != null) {
                    conn.rollback();
                }
            } catch (SQLException Ex) {
                JOptionPane.showMessageDialog(this, "Message: " + Ex.getMessage());
            }
        }
    }//GEN-LAST:event_tombolSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDataStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDataStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDataStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDataStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDataStok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Rp;
    private javax.swing.JLabel hargaSatuan;
    private javax.swing.JTextField isiHargaSatuan;
    private javax.swing.JTextField isiJumlahStok;
    private javax.swing.JTextField isiKodeBarang;
    private javax.swing.JTextField isiNamaBarang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jumlahStok;
    private javax.swing.JLabel kategori;
    private javax.swing.JLabel kodeBarang;
    private javax.swing.JLabel namaBarang;
    private javax.swing.JComboBox<String> pilihanKategori;
    private javax.swing.JLabel tigaDigitAngka;
    private javax.swing.JButton tombolCancel;
    private javax.swing.JButton tombolSave;
    // End of variables declaration//GEN-END:variables
}
